{"version":3,"file":"idb-cache.js","sources":["idb-cache.js"],"sourcesContent":["/**\n * @author Drecom Co.,Ltd. http://www.drecom.co.jp/\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar VERSION = 1;\nvar STORE_NAME = {\n    META: 'metastore',\n    DATA: 'datastore',\n};\nvar DATA_TYPE = {\n    STRING: 1,\n    ARRAYBUFFER: 2,\n    BLOB: 3,\n};\n// iPhone/iPod/iPad\nvar isIOS = /iP(hone|(o|a)d);/.test(window.navigator.userAgent);\nvar IDBCache = /** @class */ (function () {\n    function IDBCache(dbName, strageLimit) {\n        this._maxSize = 52428800; // 50MB\n        this._maxCount = 100; // 100files\n        this._defaultAge = 86400; // 1day\n        this._nowSize = 0;\n        this._metaCache = new Map();\n        this._indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.OIndexedDB || window.msIndexedDB;\n        this._dbName = dbName;\n        if (!this._indexedDB) {\n            console.error('IndexedDB is not supported');\n            return;\n        }\n        if (strageLimit) {\n            if (strageLimit.size)\n                this._maxSize = strageLimit.size;\n            if (strageLimit.count)\n                this._maxCount = strageLimit.count;\n            if (strageLimit.defaultAge)\n                this._defaultAge = strageLimit.defaultAge;\n        }\n        this._initialize();\n    }\n    /**\n     * Save key-value in IndexedDB.\n     * Overwrite if the key already exists.\n     * @param key\n     * @param value\n     * @param maxAge Number of seconds to keep\n     */\n    IDBCache.prototype.set = function (key, value, maxAge) {\n        var _this = this;\n        if (maxAge === void 0) { maxAge = this._defaultAge; }\n        return new Promise(function (resolve, reject) {\n            _this._serializeData(value, function (data, meta) {\n                if (meta.size === 0) {\n                    reject(IDBCache.ERROR.INVALID_ARGUMENT);\n                    return;\n                }\n                _this._open(function (db) {\n                    var transaction = db.transaction([STORE_NAME.META, STORE_NAME.DATA], 'readwrite');\n                    var metaStore = transaction.objectStore(STORE_NAME.META);\n                    var dataStore = transaction.objectStore(STORE_NAME.DATA);\n                    var nowSeconds = Math.floor(Date.now() / 1000);\n                    meta.expire = nowSeconds + maxAge;\n                    transaction.oncomplete = function () {\n                        transaction.oncomplete = null;\n                        transaction.onerror = null;\n                        transaction.onabort = null;\n                        var cacheMeta = _this._metaCache.get(key);\n                        if (cacheMeta) {\n                            _this._metaCache.delete(key);\n                            _this._nowSize -= cacheMeta.size;\n                        }\n                        _this._metaCache.set(key, meta);\n                        _this._nowSize += meta.size;\n                        if (_this._maxCount < _this._metaCache.size || _this._maxSize < _this._nowSize) {\n                            _this._cleanup();\n                        }\n                        resolve();\n                    };\n                    transaction.onerror = function () {\n                        transaction.oncomplete = null;\n                        transaction.onerror = null;\n                        transaction.onabort = null;\n                        reject(IDBCache.ERROR.REQUEST_FAILED);\n                    };\n                    transaction.onabort = function () {\n                        transaction.oncomplete = null;\n                        transaction.onerror = null;\n                        transaction.onabort = null;\n                        reject(IDBCache.ERROR.REQUEST_FAILED);\n                    };\n                    try {\n                        dataStore.put(data, key);\n                        metaStore.put(meta, key);\n                    }\n                    catch (e) {\n                        console.error(e);\n                        transaction.abort();\n                    }\n                }, function () {\n                    // Open error\n                    reject(IDBCache.ERROR.CANNOT_OPEN);\n                });\n            });\n        });\n    };\n    /**\n     * Get value from IndexedDB\n     * @param key\n     */\n    IDBCache.prototype.get = function (key) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._open(function (db) {\n                var transaction = db.transaction(STORE_NAME.DATA, 'readonly');\n                var dataStore = transaction.objectStore(STORE_NAME.DATA);\n                var request = dataStore.get(key);\n                request.onsuccess = function () {\n                    request.onsuccess = null;\n                    request.onerror = null;\n                    var nowSeconds = Math.floor(Date.now() / 1000);\n                    var cacheMeta = _this._metaCache.get(key);\n                    if (request.result && cacheMeta && nowSeconds < cacheMeta.expire) {\n                        _this._deserializeData(request.result, cacheMeta, function (data) {\n                            resolve(data);\n                        });\n                    }\n                    else {\n                        // Can not find or expired\n                        reject(IDBCache.ERROR.GET_EMPTY);\n                    }\n                };\n                request.onerror = function () {\n                    request.onsuccess = null;\n                    request.onerror = null;\n                    reject(IDBCache.ERROR.REQUEST_FAILED);\n                };\n            }, function () {\n                // Open error\n                reject(IDBCache.ERROR.CANNOT_OPEN);\n            });\n        });\n    };\n    /**\n     * Delete one value of IndexedDB\n     * @param key\n     */\n    IDBCache.prototype.delete = function (key) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._open(function (db) {\n                var transaction = db.transaction([STORE_NAME.META, STORE_NAME.DATA], 'readwrite');\n                var metaStore = transaction.objectStore(STORE_NAME.META);\n                var dataStore = transaction.objectStore(STORE_NAME.DATA);\n                transaction.oncomplete = function () {\n                    transaction.oncomplete = null;\n                    transaction.onerror = null;\n                    transaction.onabort = null;\n                    var cacheMeta = _this._metaCache.get(key);\n                    if (cacheMeta) {\n                        _this._metaCache.delete(key);\n                        _this._nowSize -= cacheMeta.size;\n                    }\n                    resolve();\n                };\n                transaction.onerror = function () {\n                    transaction.oncomplete = null;\n                    transaction.onerror = null;\n                    transaction.onabort = null;\n                    reject(IDBCache.ERROR.REQUEST_FAILED);\n                };\n                transaction.onabort = function () {\n                    transaction.oncomplete = null;\n                    transaction.onerror = null;\n                    transaction.onabort = null;\n                    reject(IDBCache.ERROR.REQUEST_FAILED);\n                };\n                try {\n                    dataStore.delete(key);\n                    metaStore.delete(key);\n                }\n                catch (e) {\n                    console.error(e);\n                    transaction.abort();\n                }\n            }, function () {\n                // Open error\n                reject(IDBCache.ERROR.CANNOT_OPEN);\n            });\n        });\n    };\n    IDBCache.prototype._initialize = function () {\n        var _this = this;\n        this._open(function (db) {\n            var transaction = db.transaction(STORE_NAME.META, 'readonly');\n            var metaStore = transaction.objectStore(STORE_NAME.META);\n            _this._metaCache.clear();\n            _this._nowSize = 0;\n            transaction.oncomplete = function () {\n                transaction.oncomplete = null;\n                transaction.onerror = null;\n                // Sort in ascending order of expire\n                _this._metaCache = new Map(__spread(_this._metaCache.entries()).sort(function (a, b) {\n                    if (a[1].expire < b[1].expire)\n                        return -1;\n                    if (a[1].expire > b[1].expire)\n                        return 1;\n                    return 0;\n                }));\n                _this._cleanup();\n            };\n            transaction.onerror = function () {\n                transaction.oncomplete = null;\n                transaction.onerror = null;\n            };\n            metaStore.openCursor().onsuccess = function (event) {\n                var cursor = event.target.result;\n                if (cursor) {\n                    _this._metaCache.set(cursor.key, cursor.value);\n                    _this._nowSize += cursor.value.size;\n                    cursor.continue();\n                }\n                ;\n            };\n        }, function () {\n            // Ignore open error\n        });\n    };\n    IDBCache.prototype._cleanup = function () {\n        var _this = this;\n        this._open(function (db) {\n            var removeKeys = new Set();\n            var nowSeconds = Math.floor(Date.now() / 1000);\n            var tmpNowCount = _this._metaCache.size;\n            _this._metaCache.forEach(function (meta, key) {\n                if (meta.expire < nowSeconds || _this._maxSize < _this._nowSize || _this._maxCount < tmpNowCount) {\n                    removeKeys.add(key);\n                    _this._nowSize -= meta.size;\n                    tmpNowCount--;\n                }\n            });\n            if (0 < removeKeys.size) {\n                var transaction_1 = db.transaction([STORE_NAME.META, STORE_NAME.DATA], 'readwrite');\n                var metaStore_1 = transaction_1.objectStore(STORE_NAME.META);\n                var dataStore_1 = transaction_1.objectStore(STORE_NAME.DATA);\n                transaction_1.oncomplete = function () {\n                    transaction_1.oncomplete = null;\n                    transaction_1.onerror = null;\n                    transaction_1.onabort = null;\n                    removeKeys.forEach(function (key) {\n                        if (_this._metaCache.has(key))\n                            _this._metaCache.delete(key);\n                    });\n                };\n                transaction_1.onerror = function () {\n                    console.error('IndexedDB cleanup failed');\n                    transaction_1.oncomplete = null;\n                    transaction_1.onerror = null;\n                    transaction_1.onabort = null;\n                    _this._nowSize = 0;\n                    _this._metaCache.forEach(function (meta) {\n                        _this._nowSize += meta.size;\n                    });\n                };\n                transaction_1.onabort = function () {\n                    console.error('IndexedDB cleanup failed');\n                    transaction_1.oncomplete = null;\n                    transaction_1.onerror = null;\n                    transaction_1.onabort = null;\n                    _this._nowSize = 0;\n                    _this._metaCache.forEach(function (meta) {\n                        _this._nowSize += meta.size;\n                    });\n                };\n                removeKeys.forEach(function (key) {\n                    try {\n                        dataStore_1.delete(key);\n                        metaStore_1.delete(key);\n                    }\n                    catch (e) {\n                        transaction_1.abort();\n                    }\n                });\n            }\n        }, function () {\n            // Ignore open error\n        });\n    };\n    IDBCache.prototype._createObjectStore = function (db, oldVersion) {\n        if (oldVersion < 1) {\n            // Structure of first edition\n            db.createObjectStore(STORE_NAME.META);\n            db.createObjectStore(STORE_NAME.DATA);\n        }\n    };\n    IDBCache.prototype._open = function (success, error) {\n        var _this = this;\n        if (!this._indexedDB) {\n            error();\n            return;\n        }\n        var request = this._indexedDB.open(this._dbName, VERSION);\n        request.onupgradeneeded = function (event) {\n            request.onupgradeneeded = null;\n            _this._createObjectStore(request.result, event.oldVersion);\n        };\n        request.onblocked = function () {\n            request.onblocked = null;\n            alert('Please close other tabs');\n        };\n        request.onsuccess = function () {\n            request.onupgradeneeded = null;\n            request.onblocked = null;\n            request.onsuccess = null;\n            request.onerror = null;\n            success(request.result);\n        };\n        request.onerror = function () {\n            console.error('IndexedDB open failed');\n            request.onupgradeneeded = null;\n            request.onblocked = null;\n            request.onsuccess = null;\n            request.onerror = null;\n            error();\n        };\n    };\n    IDBCache.prototype._serializeData = function (data, cb) {\n        var meta = {\n            type: 0,\n            size: 0,\n        };\n        if (typeof data === 'string') {\n            meta.type = DATA_TYPE.STRING;\n            meta.size = data.length;\n        }\n        else if (data instanceof ArrayBuffer) {\n            meta.type = DATA_TYPE.ARRAYBUFFER;\n            meta.size = data.byteLength;\n        }\n        else if (data instanceof Blob) {\n            meta.type = DATA_TYPE.BLOB;\n            meta.size = data.size;\n        }\n        else {\n            console.warn('Is not supported type of value');\n        }\n        // IndexedDB on iOS does not support blob\n        if (isIOS && meta.type === DATA_TYPE.BLOB) {\n            var reader_1 = new FileReader();\n            reader_1.onload = function () {\n                reader_1.onload = null;\n                meta.size = reader_1.result.byteLength;\n                meta.mime = data.type;\n                cb(reader_1.result, meta);\n            };\n            reader_1.onerror = function () {\n                reader_1.onerror = null;\n                meta.size = 0;\n                cb(null, meta);\n            };\n            reader_1.readAsArrayBuffer(data);\n        }\n        else {\n            cb(data, meta);\n        }\n    };\n    IDBCache.prototype._deserializeData = function (data, meta, cb) {\n        var type = 0;\n        if (typeof data === 'string') {\n            type = DATA_TYPE.STRING;\n        }\n        else if (data instanceof ArrayBuffer) {\n            type = DATA_TYPE.ARRAYBUFFER;\n        }\n        else if (data instanceof Blob) {\n            type = DATA_TYPE.BLOB;\n        }\n        if (meta && meta.type === DATA_TYPE.BLOB && type === DATA_TYPE.ARRAYBUFFER) {\n            var blob = new Blob([data], { type: meta.mime });\n            cb(blob);\n        }\n        else {\n            cb(data);\n        }\n    };\n    IDBCache.ERROR = {\n        INVALID_ARGUMENT: 1,\n        CANNOT_OPEN: 2,\n        REQUEST_FAILED: 3,\n        GET_EMPTY: 4,\n    };\n    return IDBCache;\n}());\nexport default IDBCache;\n"],"names":["__read","this","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spread","arguments","length","concat","VERSION","STORE_NAME","META","DATA","DATA_TYPE","STRING","ARRAYBUFFER","BLOB","isIOS","test","window","navigator","userAgent","IDBCache","dbName","strageLimit","_maxSize","_maxCount","_defaultAge","_nowSize","_metaCache","Map","_indexedDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","_dbName","console","size","count","defaultAge","_initialize","prototype","set","key","maxAge","_this","Promise","resolve","reject","_serializeData","data","meta","ERROR","INVALID_ARGUMENT","_open","db","transaction","metaStore","objectStore","dataStore","nowSeconds","Math","floor","Date","now","expire","oncomplete","onerror","onabort","cacheMeta","get","delete","_cleanup","REQUEST_FAILED","put","abort","CANNOT_OPEN","request","onsuccess","result","_deserializeData","GET_EMPTY","clear","entries","sort","a","b","openCursor","event","cursor","target","continue","removeKeys","Set","tmpNowCount","forEach","add","transaction_1","metaStore_1","dataStore_1","has","_createObjectStore","oldVersion","createObjectStore","success","open","onupgradeneeded","onblocked","alert","cb","type","ArrayBuffer","byteLength","Blob","warn","reader_1","FileReader","onload","mime","readAsArrayBuffer","blob"],"mappings":"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"}